apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

mainClassName = 'co.paralleluniverse.examples.cascading.Main'

ext.quasarVersion   = '0.6.0-SNAPSHOT'
ext.comsatVersion   = '0.2.0-SNAPSHOT'
ext.jettyVersion    = '9.2.0.M0'
ext.undertowVersion = '1.0.12.Final'
ext.tomcatVersion   = '8.0.8'
ext.log4jVersion    = '2.0-rc1'

repositories {
    mavenLocal();
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://maven.java.net/content/repositories/snapshots' }
}
configurations {
    quasar
}

configurations.all {
    resolutionStrategy {
        //        failOnVersionConflict()
        force 'org.slf4j:slf4j-api:1.7.6'
        force 'com.google.guava:guava:16.0.1'
        force 'org.ow2.asm:asm:5.0.1'
        force 'org.ow2.asm:asm-commons:5.0.1'
    }
}

dependencies {
    compile "org.slf4j:slf4j-api:1.7.7"
    compile "co.paralleluniverse:quasar-core:$quasarVersion"
    quasar  "co.paralleluniverse:quasar-core:$quasarVersion"
    compile "co.paralleluniverse:comsat-servlet:$comsatVersion"
    compile "co.paralleluniverse:comsat-httpclient:$comsatVersion"    
    compile "co.paralleluniverse:comsat-jersey-server:$comsatVersion"
    
    compile "org.eclipse.jetty:jetty-server:$jettyVersion"
    compile "org.eclipse.jetty:jetty-servlet:$jettyVersion"
    
    compile "io.undertow:undertow-core:$undertowVersion"
    compile "io.undertow:undertow-servlet:$undertowVersion"

    compile "org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion"
    compile "org.apache.tomcat.embed:tomcat-embed-jasper:$tomcatVersion"
    runtime "org.apache.tomcat.embed:tomcat-embed-logging-log4j:$tomcatVersion"
    
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    runtime "org.apache.logging.log4j:log4j-api:$log4jVersion"
    runtime "org.apache.logging.log4j:log4j-core:$log4jVersion"
    
    compile 'commons-cli:commons-cli:1.2'
}

run {
    jvmArgs "-javaagent:${configurations.quasar.iterator().next()}" // =v, =d
    jvmArgs '-server'
//    jvmArgs "-XX:+UnlockCommercialFeatures","-XX:+FlightRecorder"
//    jvmArgs "-XX:StartFlightRecording=duration=30s,delay=2s,filename=myrecording.jfr,settings=ProfilingHeap.jfc"
    jvmArgs '-Xmx6000m'
    jvmArgs "-XX:+UseG1GC","-XX:MaxGCPauseMillis=200"
    
    //    jvmArgs "-ea"
    
    classpath = sourceSets.main.runtimeClasspath   
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }

    // systemProperty 'co.paralleluniverse.fibers.verifyInstrumentation', 'true'

}

defaultTasks 'build'
